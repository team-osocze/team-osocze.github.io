{"version":3,"sources":["components/AppBar.tsx","components/Result/ContactList.tsx","logoRCKiK.png","components/Result/Contact.tsx","components/Result/CenterCard.tsx","components/Result/Mailto.tsx","components/Result/SuccessResult.tsx","components/shareActions.tsx","components/Result/ErrorResult.tsx","components/Result/WarningResult.tsx","components/Result/Result.tsx","components/FAQ/question.tsx","components/FAQ/index.tsx","components/BottomNavigation.tsx","components/Test/infoDialog.tsx","components/Test/yesNoQuestionComponent.tsx","components/Test/questionGroupComponent.tsx","components/progressBar.tsx","appContext.ts","components/Test/index.tsx","questions/testLogic.ts","components/Landing/Page.tsx","medius.jpg","components/Creators/CreatorsPage.tsx","questions/testDefinition.ts","appState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","menuButton","marginRight","spacing","title","flexGrow","drawerHeader","width","display","flexDirection","alignItems","justifyContent","padding","boxSizing","ListItemLink","props","primary","to","icon","renderLink","React","useMemo","forwardRef","itemProps","ref","onClick","ListItem","button","component","ListItemIcon","ListItemText","ButtonAppBar","showResultOption","classes","useState","drawerOpen","setDrawerOpen","toggleDrawerOpen","x","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Drawer","open","variant","anchor","Typography","Divider","List","href","target","style","SvgIcon","cx","cy","r","fill","d","id","constactList","backgroundColor","palette","background","paper","constactListElement","paddingTop","paddingBottom","ContactList","Room","secondary","Email","Language","centerCard","maxWidth","margin","large","centerCardHeader","align","centerCardContent","logoSection","logoImg","logoTitle","Contact","Card","src","logo","alt","CardContent","CenterCard","applicationEmailText","emailLink","buttonLink","marginBottom","Mailto","subject","resultMessages","params","encodeURIComponent","join","Button","startIcon","gutterBottom","successResult","marginTop","link","marginLeft","SuccessResult","Alert","severity","AlertTitle","map","m","sharedUrl","window","location","sharedText","sharedTextWithUrl","bottomText","handleShare","navigator","share","url","then","console","log","catch","error","ShareActions","FacebookShareButton","quote","TwitterShareButton","EmailShareButton","body","WhatsappShareButton","shareActionsContainer","ErrorResult","WarningResult","content","flex","header","Result","result","resultAdditionalMessage","resultAdditionalMessages","backToTestCallback","Link","size","heading","flexBasis","flexShrink","green","red","secondaryHeading","fontSize","typography","pxToRem","text","groupDetails","whiteSpace","footer","question","textAlign","InfoComponent","questionText","FAQQuestionComponent","Accordion","expanded","onChange","onToggleGroup","AccordionSummary","expandIcon","aria-controls","AccordionDetails","answer","groupsList","testStartSection","FAQComponent","expandedGroup","setExpandedGroup","faqQuestions","questions","group","index","isLastGroup","length","previouslyExpandedGroup","toggleGroup","SimpleBottomNavigation","dialogLink","InfoDialog","infoText","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","height","anserwButtons","YesNoQuestionComponent","onAnswer","info","questionResult","yellow","QuestionGroupComponent","groupStatus","q","type","renderQuestion","onNext","_","progress","CircularProgressWithLabel","CircularProgress","value","answeredQuestions","allQuestions","top","left","bottom","right","defaultContext","showInfo","setShowInfo","scroll","appliedPosition","persistedPosition","setScroll","AppContext","AppContextProvider","Provider","resultButtonContainer","TestComponent","testState","onRestart","context","Error","useAppContext","history","useHistory","localOnAnswer","onYes","onNo","questionError","push","numberOfAnsweredQuestions","numberOfAllQuestions","groups","Collapse","in","action","groupToSet","previouslyExpandedGroupHeader","nextGroupIndex","findIndex","g","disabled","isDone","prev","LandingPage","CreatorsPage","createTestState","additionalResultMessage","onYesQuestion","onNoQuestion","flatMap","testResult","testResultAdditionalMessages","initialState","ANSWER_QUESTION_TYPE","RESET_STATE_TYPE","appStateReducer","state","current","subQuestions","getSubquestionsOf","containsQuestion","some","calculateResult","filter","additionalResultMessages","calculateTestResult","payload","app","container","test","overflowY","createMuiTheme","main","contrastText","warning","success","contrastThreshold","tonalOffset","fontFamily","App","useReducer","dispatch","scrollState","setScrollState","expandedGroupHeader","setExpandedGroupHeader","appContainerElement","useRef","appContext","testProps","scrollPosition","scrollTop","answerQuestionAction","resultProps","useEffect","Container","ThemeProvider","exact","path","Test","FAQ","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8895d19e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, SvgIcon, Typography } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { Link, LinkProps } from 'react-router-dom';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        drawerHeader: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"0 0 0 10px\",\r\n            boxSizing: \"border-box\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface ListItemLinkProps {\r\n    icon?: React.ReactElement;\r\n    primary: string;\r\n    to: string;\r\n    onClick: () => void;\r\n}\r\n\r\nfunction ListItemLink(props: ListItemLinkProps) {\r\n    const { primary, to, icon } = props;\r\n\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef<any, Omit<LinkProps, 'to'>>((itemProps, ref) => (\r\n                <Link to={to} ref={ref} {...itemProps} />\r\n            )),\r\n        [to],\r\n    );\r\n\r\n    return (\r\n        <li onClick={props.onClick}>\r\n            <ListItem button component={renderLink}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={primary} />\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\ninterface AppBarProps {\r\n    showResultOption: boolean;\r\n}\r\n\r\nexport default function ButtonAppBar({showResultOption}: AppBarProps) {\r\n    const classes = useStyles();\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    const toggleDrawerOpen = () => {\r\n        setDrawerOpen(x => !x);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawerOpen}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                open={drawerOpen}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.drawerHeader} onClick={toggleDrawerOpen}>\r\n                    <Typography>Osocze ma moc!</Typography>\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n\r\n                    <ListItemLink primary=\"O projekcie\" to=\"\" onClick={toggleDrawerOpen} />\r\n                    <ListItemLink primary=\"Test\" to=\"test\" onClick={toggleDrawerOpen}/>\r\n                    {showResultOption && <ListItemLink primary=\"Wynik\" to=\"result\" onClick={toggleDrawerOpen}/>}\r\n                    <ListItemLink primary=\"FAQ - Najczęściej zadawane pytania\" to=\"faq\" onClick={toggleDrawerOpen}/>\r\n                    <Divider />\r\n                    <ListItem button component=\"a\" href=\"https://github.com/team-osocze/team-osocze.github.io\" target=\"_blank\">\r\n                        <ListItemIcon><GitHubIcon style={{color: \"black\"}}/></ListItemIcon>\r\n                        <ListItemText primary=\"Kod źródłowy\"/>\r\n                    </ListItem>\r\n                    <ListItemLink primary=\"Twórcy\" to=\"tworcy\" onClick={toggleDrawerOpen} \r\n                        icon={<SvgIcon>\r\n                            <circle cx=\"11.9\" cy=\"12.1\" r=\"5.2\" fill=\"red\" />\r\n                            <path d=\"M11.9,23.6c-6.4,0-11.6-5.2-11.6-11.6S5.6,0.5,11.9,0.5s11.6,5.2,11.6,11.6S18.3,23.6,11.9,23.6z M11.9,2.9&#xD;&#xA;\tc-5.1,0-9.2,4.1-9.2,9.2c0,5.1,4.1,9.2,9.2,9.2c5.1,0,9.2-4.1,9.2-9.2C21.1,7,17,2.9,11.9,2.9z\" fill=\"black\"/>\r\n                            </SvgIcon>}/>\r\n                    <Divider />\r\n                    <ListItem button component=\"a\" href=\"https://rckik.krakow.pl/\" target=\"_blank\">\r\n                        <ListItemIcon>\r\n                            <SvgIcon>                            \r\n                            <g id=\"surface1\">\r\n                            <path fill=\"red\" d=\"M 10.054688 0.707031 C 9.84375 0.875 9.808594 1.035156 9.839844 1.667969 C 9.890625 2.664062 9.746094 3.535156 9.378906 4.472656 C 9.171875 5 8.90625 5.503906 8.238281 6.613281 C 7.683594 7.53125 7.46875 7.960938 7.285156 8.492188 C 7.050781 9.15625 7 9.554688 7.019531 10.492188 C 7.039062 11.222656 7.054688 11.363281 7.160156 11.71875 C 7.40625 12.550781 7.785156 13.1875 8.382812 13.78125 C 8.972656 14.363281 9.511719 14.683594 10.324219 14.941406 C 10.695312 15.058594 10.765625 15.0625 11.570312 15.0625 C 12.375 15.0625 12.445312 15.058594 12.816406 14.941406 C 13.628906 14.683594 14.167969 14.363281 14.757812 13.78125 C 15.359375 13.1875 15.738281 12.550781 15.980469 11.71875 C 16.078125 11.371094 16.097656 11.214844 16.113281 10.558594 C 16.140625 9.621094 16.050781 8.988281 15.753906 8.089844 C 15.144531 6.226562 14.074219 4.570312 11.675781 1.785156 C 10.707031 0.660156 10.667969 0.625 10.375 0.625 C 10.226562 0.625 10.113281 0.652344 10.054688 0.707031 Z M 12.371094 6.820312 C 12.429688 6.886719 12.441406 7.058594 12.457031 7.882812 C 12.464844 8.636719 12.480469 8.886719 12.53125 8.941406 C 12.582031 9.007812 12.710938 9.019531 13.570312 9.019531 C 14.398438 9.019531 14.554688 9.027344 14.613281 9.089844 C 14.667969 9.148438 14.683594 9.289062 14.683594 9.957031 C 14.683594 10.699219 14.675781 10.757812 14.597656 10.804688 C 14.546875 10.832031 14.128906 10.847656 13.550781 10.847656 C 12.710938 10.847656 12.582031 10.855469 12.53125 10.925781 C 12.480469 10.976562 12.464844 11.226562 12.457031 12.003906 C 12.445312 12.878906 12.433594 13.023438 12.371094 13.066406 C 12.265625 13.148438 10.875 13.148438 10.769531 13.070312 C 10.707031 13.023438 10.695312 12.878906 10.683594 12.003906 C 10.675781 11.226562 10.660156 10.976562 10.609375 10.925781 C 10.558594 10.855469 10.429688 10.847656 9.589844 10.847656 C 9.011719 10.847656 8.59375 10.832031 8.542969 10.804688 C 8.460938 10.757812 8.457031 10.699219 8.457031 9.957031 C 8.457031 9.289062 8.472656 9.148438 8.527344 9.089844 C 8.585938 9.027344 8.742188 9.019531 9.570312 9.019531 C 10.429688 9.019531 10.558594 9.007812 10.609375 8.941406 C 10.660156 8.886719 10.675781 8.636719 10.683594 7.882812 C 10.699219 7.058594 10.710938 6.886719 10.769531 6.820312 C 10.828125 6.75 10.925781 6.742188 11.570312 6.742188 C 12.214844 6.742188 12.3125 6.75 12.371094 6.820312 Z M 12.371094 6.820312 \"/>\r\n                            </g>                           \r\n                            </SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Patronat RCKiK\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Room, Email, Language, Phone} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    constactList: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    constactListElement:{\r\n      paddingTop: 0,\r\n      paddingBottom: 0\r\n    }\r\n   }),\r\n);\r\n\r\nexport default function ContactList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.constactList}>     \r\n     <ListItem button component=\"a\" href=\"https://www.google.com/maps/search/?api=1&query=Regionalne+Centrum+Krwiodawstwa+i+Krwiolecznictwa+w+Krakowie\" target=\"_blank\" className={classes.constactListElement}>         \r\n        <ListItemIcon>\r\n          <Room />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"ul. Rzeźnicza 11\" secondary=\"31-540 Kraków\" />\r\n      </ListItem>\r\n      {/* <ListItem button component=\"a\" href=\"tel:+4812 261 88 03\" className={classes.constactListElement}>         \r\n        <ListItemIcon>\r\n          <Phone />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"+48 12 261 88 03\" secondary=\"w godz. 8:00-16:00\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"tel:+48 663 560 300\" className={classes.constactListElement}>         \r\n        <ListItemIcon>\r\n          <Phone />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"+48 663 560 300\" secondary=\"w godz. 7:00-15:00\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"tel:+48 661 926 116\" className={classes.constactListElement}>         \r\n      <ListItemIcon>\r\n          <Phone />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"+48 661 926 116\" secondary=\"w godz. 8:00-15:00\" />\r\n      </ListItem> */}      \r\n      <ListItem button component=\"a\" href=\"mailto:osocze@rckik.pl\" className={classes.constactListElement}>         \r\n        <ListItemIcon>\r\n          <Email />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"dzial.dawcow@rckik.krakow.pl\" secondary=\"w emailu podaj nr telefonu do kontaktu\" />\r\n      </ListItem>\r\n      <ListItem button component=\"a\" href=\"https://rckik.krakow.pl\" target=\"_blank\" className={classes.constactListElement}>         \r\n        <ListItemIcon>\r\n          <Language />\r\n        </ListItemIcon>  \r\n      <ListItemText primary=\"rckik.krakow.pl\" secondary=\"\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logoRCKiK.bda5a390.png\";","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ContactList from './ContactList';\r\nimport logo from \"../../logoRCKiK.png\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    centerCard: {\r\n      maxWidth: 600,\r\n      padding: 4,\r\n      margin: 'auto'\r\n    }, \r\n    large: {\r\n      width: '100%',\r\n      \r\n    },    \r\n    centerCardHeader: {\r\n      paddingBottom: 4,\r\n      align: 'right'\r\n    },\r\n    centerCardContent:{\r\n      paddingTop: 4,\r\n    },\r\n    logoSection: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      margin: \"5px 0\",\r\n      \"& img\": {\r\n          marginRight: 10\r\n      }\r\n    },\r\n    logoImg: {\r\n        width: \"100%\",\r\n        maxWidth: \"300px\"\r\n    },\r\n    logoTitle:{\r\n      padding: \"16px\"\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function Contact() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Card className={classes.centerCard}>\r\n        <div>      \r\n          <section className={classes.logoSection}>\r\n              <a href=\"https://rckik.krakow.pl\" target=\"blank\">\r\n                  <img src={logo} className={classes.logoImg} alt=\"RCKiK w Krakowie logo\" />\r\n              </a>\r\n              <Typography variant=\"h6\" className={classes.logoTitle}>\r\n              Regionalne Centrum Krwiodawstwa i Krwiolecznictwa w Krakowie\r\n              </Typography>\r\n          </section>\r\n        </div>\r\n        <CardContent className={classes.centerCardContent}>        \r\n          <Typography variant=\"body2\" component=\"p\">\r\n              <ContactList/>\r\n          </Typography>\r\n        </CardContent>  \r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\n\r\n\r\nexport default function CenterCard() {\r\n\r\n  return (\r\n    <Contact />\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst applicationEmail: string = \"osocze@rckik.pl\";\r\nlet applicationEmailText: string = \"\";\r\nconst applicationEmailTextBase: string =  `Zgłoszenie Ozdrowieńca, \\n\r\nImię i Nazwisko: \\n \r\nNumer telefonu: \\n \r\nDodatkowe uwagi: `;\r\n\r\ninterface IResultProps {\r\n    subject: string;\r\n    resultMessages: string[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    emailLink: {\r\n        display: 'inline'\r\n    },\r\n    buttonLink:{\r\n        marginBottom: '5px'\r\n    }\r\n  })\r\n);\r\n\r\nexport default function Mailto({subject, resultMessages }: IResultProps){\r\n    const classes = useStyles();\r\n\r\n    let params = subject || applicationEmailText ? '?' : '';\r\n    if (subject) params += `subject=${encodeURIComponent(subject)}`;\r\n    if (resultMessages) applicationEmailText = applicationEmailTextBase + resultMessages.join(' \\n');\r\n    if (applicationEmailText) params += `${subject ? '&' : ''}body=${encodeURIComponent(applicationEmailText)}`;\r\n  \r\n    return(\r\n        <>\r\n        <p>\r\n            <Button\r\n                component=\"a\"\r\n                variant=\"outlined\" \r\n                className={classes.buttonLink}\r\n                color=\"primary\"\r\n                startIcon={<DraftsIcon />}\r\n                href={`mailto:${applicationEmail}${params}`}\r\n                target=\"_blank\">       \r\n                Zgłoś się przez e-mail         \r\n            </Button>      \r\n            <Typography variant=\"body1\" gutterBottom>\r\n            Koniecznie podając:<br/>\r\n            - imie i nazwisko<br/>\r\n            - numer telefonu<br/>        \r\n            - informację o wynikach testu<br/> \r\n            </Typography>\r\n        </p>        \r\n    </>)\r\n  };","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport RCKiKCard from \"./CenterCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Language } from \"@material-ui/icons\";\r\nimport Mailto from './Mailto';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    successResult: {\r\n      width: \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    buttonLink: {\r\n      marginTop: 0,\r\n    },\r\n    link: {\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    icon: {\r\n      padding: 5\r\n    },\r\n  })\r\n);\r\n\r\ninterface ISuccessResultProps {\r\n  resultMessages: string[];\r\n}\r\n\r\nexport default function SuccessResult({ resultMessages }: ISuccessResultProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.successResult}>\r\n      <Alert severity=\"success\">\r\n        <AlertTitle>Wspaniale!</AlertTitle>\r\n        <p>\r\n          Wygląda na to, że Twoje osocze może uratować komuś życie! <strong>Napisz do nas</strong> Oddzwonimy żeby by umówić się na oddanie osocza.\r\n        </p>\r\n        {resultMessages.map((m) => (\r\n          <p>\r\n            <strong>{m}</strong>\r\n          </p>\r\n        ))}\r\n      </Alert>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        Pamiętaj! Pracujemy na pełnych obrotach, odpowiedź może nam to zająć trochę czasu. Bądź cierpliwy.\r\n      </Typography>      \r\n      <Mailto subject=\"WSPANIALE - Zgłoszenie z osocze-info\" resultMessages={resultMessages}/>     \r\n      <RCKiKCard />\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        Jeżeli do Krakowa masz za daleko, sprawdź jak oddać osocze w cenrum\r\n        krwiodawstwa bliżej Ciebie. Lista centrów krwiodawstwa jest dostępna na\r\n        stronie:\r\n      </Typography>\r\n      <Button\r\n        component=\"a\"\r\n        className={classes.buttonLink}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        startIcon={<Language />}\r\n        href=\"https://www.gov.pl/web/nck/centrakrwiodawstwa\"\r\n        target=\"_blank\"\r\n      >\r\n        Narodowego Centrum Krwi\r\n      </Button>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        <strong>Udostępnij</strong> link do tej strony jak największej liczbie\r\n        osób - być może wśród Twoich znajomych są potencjalni dawcy osocza.\r\n        <br />\r\n        Razem uratujemy więcej ludzkich żyć!\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { TwitterShareButton, FacebookShareButton, EmailShareButton, WhatsappShareButton } from 'react-share';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WhatsappIcon from '@material-ui/icons/WhatsApp';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nconst sharedUrl: string = window.location.href;\r\nconst sharedText: string = \"Czy wiesz, że Twoje osocze może uratować życie? Sprawdź, czy możesz zostać jego dawcą na osocze.info. Wypełnienie wstępnej ankiety zajmie Ci tylko 5 minut. Satysfakcja z uratowania drugiego człowieka będzie trwała całe życie :) Wejdź na:\"\r\nconst sharedTextWithUrl: string = `${sharedText} ${sharedUrl}`\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 10,\r\n        background: \"lightgray\",\r\n        marginTop: \"10px\"\r\n    },\r\n    icon: {\r\n        padding: 5\r\n    },\r\n    bottomText: {\r\n        marginRight: 15\r\n    }\r\n});\r\n\r\nconst handleShare = () => {\r\n    if (navigator.share) {\r\n        navigator.share({\r\n            title: sharedText,\r\n            url: sharedUrl\r\n        }).then(() => {\r\n            console.log('Thanks for sharing!');\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n        // fallback\r\n        console.log('fallback to dialog')\r\n    }\r\n};\r\n\r\nexport function ShareActions() {\r\n    const classes = useStyles();\r\n\r\n    return (<>\r\n        <FacebookShareButton url={sharedUrl} quote={sharedTextWithUrl}>\r\n            <FacebookIcon className={classes.icon} color=\"primary\" />\r\n        </FacebookShareButton>\r\n        <TwitterShareButton url={sharedUrl} title={sharedText}>\r\n            <TwitterIcon className={classes.icon} color=\"primary\" />\r\n        </TwitterShareButton>\r\n        <EmailShareButton url={sharedUrl} subject=\"Osocze ozdrowieńców COVID-19\" body={sharedText}>\r\n            <EmailIcon className={classes.icon} color=\"primary\" />\r\n        </EmailShareButton>\r\n        <WhatsappShareButton url={sharedUrl} title={sharedText}>\r\n            <WhatsappIcon className={classes.icon} color=\"primary\" />\r\n        </WhatsappShareButton>\r\n        {navigator.share && <ShareIcon className={classes.icon} color=\"primary\" onClick={handleShare} />}\r\n    </>\r\n    )\r\n}","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { ShareActions } from \"../shareActions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    successResult: {\r\n      width: \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    shareActionsContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"0 50px;\",\r\n    },\r\n  })\r\n);\r\ninterface IErrorResultProps {\r\n  resultMessages: string[];\r\n}\r\nexport default function ErrorResult({ resultMessages }: IErrorResultProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.successResult}>\r\n      <Alert severity=\"error\">\r\n        <AlertTitle>Przykro nam.</AlertTitle>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Dziękujemy za wypełnienie kwestionariusza. Niestety, wygląda na to, że\r\n          w tym momencie nie możesz zostać dawcą osocza.\r\n          {resultMessages.map((m) => (\r\n            <p>\r\n              <strong>{m}</strong>\r\n            </p>\r\n          ))}\r\n        </Typography>\r\n      </Alert>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        Ciągle jednak możesz zrobić coś, co pomoże innym.\r\n        <br /> <strong>Udostępnij</strong> link do tej strony jak największej\r\n        liczbie osób - być może wśród Twoich znajomych są potencjalni dawcy\r\n        osocza.\r\n        <br />\r\n        Razem uratujemy więcej ludzkich żyć!\r\n      </Typography>\r\n      <div className={classes.shareActionsContainer}>\r\n        <ShareActions />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport CenterCard from \"./CenterCard\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Mailto from './Mailto';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    successResult: {\r\n      width: \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  })\r\n);\r\ninterface IWarningResultProps {\r\n  resultMessages: string[];\r\n}\r\nexport default function WarningResult({ resultMessages }: IWarningResultProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.successResult}>\r\n      <Alert severity=\"warning\">\r\n        <AlertTitle>Może się udać.</AlertTitle>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          <p>\r\n            Jest duża szansa, że Twoje osocze może uratować komuś życie! Kilka\r\n            odpowiedzi na pytania wymaga jednak konsultacji ze specjalistą.\r\n          </p>\r\n          {resultMessages.map((m) => (\r\n            <p>\r\n              <strong>{m}</strong>\r\n            </p>\r\n          ))}\r\n        </Typography>\r\n      </Alert>\r\n      <Mailto subject=\"Może, może... - Zgłoszenie z osocze-info\" resultMessages={resultMessages}/>    \r\n      <Typography variant=\"body1\" gutterBottom>\r\n      Pamiętaj! Pracujemy na pełnych obrotach, odpowiedź może nam zająć trochę czasu. Bądź cierpliwy.\r\n      </Typography> \r\n      <CenterCard />\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        <strong>Udostępnij</strong> link do tej strony jak największej liczbie\r\n        osób - być może wśród Twoich znajomych są potencjalni dawcy osocza.\r\n        <br />\r\n        Razem uratujemy więcej ludzkich żyć!\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SuccessResult from \"./SuccessResult\";\r\nimport ErrorResult from \"./ErrorResult\";\r\nimport WarningResult from \"./WarningResult\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TestResult } from \"../../questions/testDefinition\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      padding: \"0 16px\",\r\n      flex: 1,\r\n    },\r\n    header: {\r\n      marginTop: \"16px\",\r\n      marginBottom: \"8px\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface ResultProps {\r\n  result: TestResult;\r\n  resultAdditionalMessages: string[];\r\n  backToTestCallback: () => void;\r\n}\r\n\r\nexport default function Result({\r\n  result,\r\n  resultAdditionalMessages: resultAdditionalMessage,\r\n  backToTestCallback,\r\n}: ResultProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.content}>\r\n        <header className={classes.header}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Wynik\r\n          </Typography>\r\n          <Button\r\n            component={Link}\r\n            to=\"test\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={backToTestCallback}\r\n          >\r\n            Wróć do testu\r\n          </Button>\r\n        </header>\r\n        <div>\r\n          {result === \"Success\" ? (\r\n            <SuccessResult resultMessages={resultAdditionalMessage} />\r\n          ) : null}\r\n          {result === \"Error\" ? (\r\n            <ErrorResult resultMessages={resultAdditionalMessage} />\r\n          ) : null}\r\n          {result === \"Warning\" ? (\r\n            <WarningResult resultMessages={resultAdditionalMessage} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Accordion, AccordionDetails, AccordionSummary, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        flexBasis: \"33.33%\",\r\n        flexShrink: 0,\r\n    },\r\n    green: {\r\n        color: \"green\",\r\n    },\r\n    red: {\r\n        color: \"red\",\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    groupDetails: {\r\n        flexDirection: \"column\",\r\n        whiteSpace: \"pre-line\"\r\n    },\r\n    footer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    question: {\r\n        marginBottom: \"40px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"left\",\r\n      },\r\n}));\r\n\r\ninterface InfoGroupProps {\r\n    isLastGroup: boolean;\r\n    expanded: boolean;\r\n    onToggleGroup: () => void;\r\n    question: string,\r\n    answer: string\r\n}\r\n\r\nconst InfoComponent: React.FC<{questionText: string}> = (props: {questionText: string}) => {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <>\r\n        <div className={classes.question}>\r\n          <Typography>{props.questionText}</Typography>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\nconst FAQQuestionComponent: React.FC<InfoGroupProps> = (props: InfoGroupProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Accordion expanded={props.expanded} onChange={() => props.onToggleGroup()}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={props.question + \"-content\"} id={props.question + \"-header\"}>\r\n                    <Typography variant=\"h6\" className={classes.secondaryHeading}>\r\n                        {props.question}\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.groupDetails}>\r\n                    <InfoComponent questionText={props.answer} />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FAQQuestionComponent;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport FAQQuestionComponent from \"./question\";\r\nimport faqQuestions from \"./questions.json\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content:{\r\n      padding: \"0 16px\",\r\n      flex: 1\r\n    },\r\n    heading: {\r\n      flexBasis: \"33.33%\",\r\n      flexShrink: 0,\r\n      color: \"green\",\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    header: {\r\n      marginTop: \"16px\",\r\n      marginBottom: \"8px\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    groupDetails: {\r\n      flexDirection: \"column\",\r\n    },\r\n    groupsList: {\r\n      marginTop: \"10px\",\r\n    },\r\n    testStartSection: {\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n  }));\r\n\r\nconst FAQComponent: React.FC = function() {\r\n    const classes = useStyles();\r\n    const [expandedGroup, setExpandedGroup] = React.useState<typeof faqQuestions[0] | null>(null);\r\n    const [questions] = React.useState<typeof faqQuestions>(faqQuestions);\r\n\r\n    function toggleGroup(group: typeof faqQuestions[0]) {\r\n        setExpandedGroup((previouslyExpandedGroup) =>\r\n            previouslyExpandedGroup !== group ? group : null\r\n        );\r\n    }\r\n\r\n    return (\r\n          <div className={classes.content}> \r\n            <header className={classes.header}>     \r\n              <Typography variant=\"h5\">FAQ - Najczęściej zadawane pytania</Typography>\r\n            </header>           \r\n            <div className={classes.groupsList}>\r\n              {questions.map((group: typeof faqQuestions[0], index: number) => (\r\n                <FAQQuestionComponent\r\n                  expanded={expandedGroup === group}\r\n                  isLastGroup={index === questions.length - 1}\r\n                  onToggleGroup={() => toggleGroup(group)}\r\n                  question={group.question}\r\n                  answer={group.answer}\r\n                  key={index} \r\n                />\r\n              ))}\r\n            </div>\r\n            <section className={classes.testStartSection}>\r\n              <Button component={Link} to=\"test\" size=\"large\" variant=\"contained\" color=\"primary\">Test</Button>\r\n            </section>\r\n          </div>\r\n      );\r\n};\r\n\r\nexport default FAQComponent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {ShareActions} from \"./shareActions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    background: \"lightgray\",\r\n    marginTop: \"10px\"\r\n  },\r\n  bottomText: {\r\n    marginRight: 15\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n    >\r\n      <Typography component=\"span\" className={classes.bottomText}>Udostępnij:</Typography>\r\n      <ShareActions />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ninterface IInfoDialogProps {\r\n    infoText: string;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    dialogLink: {\r\n        display: \"inline\",\r\n        marginLeft: \"8px\"\r\n      },\r\n});\r\n\r\nexport default function InfoDialog({ infoText }: IInfoDialogProps){\r\n    const [open, setOpen] = React.useState(false);  \r\n    const classes = useStyles();  \r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <Link onClick={handleClickOpen}>\r\n              <Typography variant=\"subtitle2\" className={classes.dialogLink}>Dowiedz się więcej.</Typography>           \r\n          </Link >\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >           \r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {infoText}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>             \r\n              <Button onClick={handleClose} color=\"primary\" >\r\n                Rozumiem\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { YesNoAnswer, IQuestion } from \"../../questions/testDefinition\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport PriorityHigh from \"@material-ui/icons/PriorityHigh\";\r\nimport InfoDialog from \"./infoDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  question: {\r\n    marginBottom: \"40px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"left\",\r\n  },\r\n  answer: {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"48px\",\r\n  },\r\n  anserwButtons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"50%\",\r\n  },\r\n  result: {\r\n    width: \"56px\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  green: {\r\n    color: \"green\",\r\n  },\r\n  red: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\ninterface IYesNoQuestionProps {\r\n  question: IQuestion;\r\n  onAnswer: (question: IQuestion, answer: YesNoAnswer) => void;\r\n}\r\n\r\nconst YesNoQuestionComponent: React.FC<IYesNoQuestionProps> = (\r\n  props: IYesNoQuestionProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  function onAnswer(answer: YesNoAnswer) {\r\n    props.onAnswer(props.question, answer);\r\n  }\r\n\r\n  function questionResult() {\r\n    switch (props.question.result) {\r\n      case null:\r\n        return <></>;\r\n      case \"Error\":\r\n        return (\r\n          <Alert icon={<ClearIcon fontSize=\"inherit\" />} severity=\"error\" />\r\n        );\r\n      case \"Warning\":\r\n        return (\r\n          <Alert\r\n            icon={<PriorityHigh fontSize=\"inherit\" />}\r\n            severity=\"warning\"\r\n          />\r\n        );\r\n      case \"Success\":\r\n        return (\r\n          <Alert icon={<DoneIcon fontSize=\"inherit\" />} severity=\"success\" />\r\n        );\r\n      case \"Empty\" || \"AnotherQuestion\":\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.question}>\r\n        <Typography>\r\n          {props.question.text}\r\n          {!!props.question.info ? (\r\n            <InfoDialog infoText={props.question.info} />\r\n          ) : null}\r\n        </Typography>\r\n        <div className={classes.answer}>\r\n          <div className={classes.anserwButtons}>\r\n            <Button\r\n              variant={\r\n                props.question.answer === \"Yes\" ? \"contained\" : \"outlined\"\r\n              }\r\n              color=\"primary\"\r\n              onClick={() => onAnswer(\"Yes\")}\r\n            >\r\n              TAK\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                props.question.answer === \"No\" ? \"contained\" : \"outlined\"\r\n              }\r\n              color=\"primary\"\r\n              onClick={() => onAnswer(\"No\")}\r\n            >\r\n              NIE\r\n            </Button>\r\n          </div>\r\n          <div className={classes.result}>{questionResult()}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YesNoQuestionComponent;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { IQuestion, IQuestionGroup, YesNoAnswer } from \"../../questions/testDefinition\";\r\nimport YesNoQuestionComponent from \"./yesNoQuestionComponent\";\r\nimport PriorityHigh from \"@material-ui/icons/PriorityHigh\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  green: {\r\n    color: \"green\",\r\n  },\r\n  red: {\r\n    color: \"red\",\r\n  },\r\n  yellow: {\r\n    color: \"rgb(255, 186, 90)\",\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  groupDetails: {\r\n    flexDirection: \"column\",\r\n  },\r\n  footer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\ninterface IQuestionGroupProps {\r\n  isLastGroup: boolean;\r\n  expanded: boolean;\r\n  onToggleGroup: () => void;\r\n  onNext: () => void;\r\n  group: IQuestionGroup;\r\n  onAnswer: (question: IQuestion, answer: YesNoAnswer) => void;\r\n}\r\n\r\nconst QuestionGroupComponent: React.FC<IQuestionGroupProps> = (\r\n  props: IQuestionGroupProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  function renderQuestion(q: IQuestion) {\r\n    if (q.type === \"YesNo\")\r\n      return <YesNoQuestionComponent question={q} onAnswer={props.onAnswer} />;\r\n  }\r\n\r\n  function groupStatus() {\r\n    switch (props.group.result) {\r\n      case null:\r\n        return <></>;\r\n      case \"Success\":\r\n        return <DoneIcon className={classes.green} />;\r\n      case \"Warning\":\r\n        return <PriorityHigh className={classes.yellow} />;\r\n      case \"Error\":\r\n        return <ClearIcon className={classes.red} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Accordion\r\n        expanded={props.expanded}\r\n        onChange={() => props.onToggleGroup()}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls={props.group.header + \"-content\"}\r\n          id={props.group.header + \"-header\"}\r\n        >\r\n          <div className={classes.heading}>{groupStatus()}</div>\r\n          <Typography variant=\"h6\" className={classes.secondaryHeading}>\r\n            {props.group.header}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.groupDetails}>\r\n          {props.group.questions.map((q) => renderQuestion(q))}\r\n          <div className={classes.footer}>\r\n            {!props.isLastGroup && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => props.onNext()}\r\n              >\r\n                DALEJ\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionGroupComponent;\r\n","import { CircularProgress, createStyles, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box/Box\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((_) =>\r\n  createStyles({\r\n    progress:{\r\n      fontSize: \"0.7rem\"\r\n    }\r\n  }),\r\n);\r\ninterface CircularProgressWithLabelProps {\r\n  answeredQuestions: number;\r\n  allQuestions: number;\r\n}\r\nexport default function CircularProgressWithLabel(\r\n  props: CircularProgressWithLabelProps\r\n) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress\r\n        variant=\"static\"\r\n        value={100 * (props.answeredQuestions / props.allQuestions)}\r\n        size={40}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n          className={classes.progress}\r\n        >{`${props.answeredQuestions}/${props.allQuestions}`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Dispatch, SetStateAction} from \"react\";\r\n\r\nexport interface ScrollInfo {\r\n    appliedPosition: number;\r\n    persistedPosition: number;\r\n}\r\n\r\nexport interface AppContextProps {\r\n    showInfo: boolean;\r\n    setShowInfo: Dispatch<SetStateAction<boolean>>;\r\n    scroll: ScrollInfo;\r\n    setScroll: Dispatch<SetStateAction<ScrollInfo>>;\r\n}\r\n\r\nconst defaultContext: AppContextProps = {\r\n    showInfo: true,\r\n    setShowInfo: () => {},\r\n    scroll: { appliedPosition: 0, persistedPosition: 0 },\r\n    setScroll: () => {},\r\n};\r\n\r\nconst AppContext = React.createContext<AppContextProps>(defaultContext);\r\n\r\nfunction useAppContext() {\r\n    const context = React.useContext(AppContext);\r\n\r\n    if(!context) {\r\n        throw new Error(\r\n            \"Cannot use `useAppContext` outside of a AppContext\"\r\n        );\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst AppContextProvider = AppContext.Provider;\r\n\r\nexport { AppContextProvider, useAppContext };","import { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport QuestionGroupComponent from \"./questionGroupComponent\";\r\nimport {\r\n  ITest,\r\n  IQuestionGroup,\r\n  IQuestion,\r\n  YesNoAnswer,\r\n} from \"../../questions/testDefinition\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ProgressBar from \"../progressBar\";\r\nimport { useAppContext } from \"../../appContext\";\r\nimport { questionError } from \"../../questions/testLogic\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: \"0 16px\",\r\n    flex: 1,\r\n  },\r\n  heading: {\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: \"green\",\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  header: {\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  groupDetails: {\r\n    flexDirection: \"column\",\r\n  },\r\n  groupsList: {\r\n    marginTop: \"10px\",\r\n  },\r\n  resultButtonContainer: {\r\n    textAlign: \"center\",\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\n\r\ninterface TestComponentProps {\r\n  testState: ITest;\r\n  onAnswer: (question: IQuestion, answer: YesNoAnswer) => void;\r\n  onRestart: () => void;\r\n  expandedGroup: string | null;\r\n  setExpandedGroup: (groupToSet: string | null) => void;\r\n}\r\n\r\nconst TestComponent: React.FC<TestComponentProps> = ({testState, onAnswer, onRestart, expandedGroup, setExpandedGroup}: TestComponentProps) => {\r\n  const classes = useStyles();\r\n  \r\n  const { showInfo, setShowInfo, setScroll } = useAppContext();\r\n\r\n  const history = useHistory();\r\n\r\n  function toggleGroup(group: IQuestionGroup) {\r\n    const groupToSet = expandedGroup !== group.header ? group.header : null\r\n    setExpandedGroup(groupToSet);\r\n  }\r\n\r\n  function openNextGroup() {\r\n    setExpandedGroup(((previouslyExpandedGroupHeader: string | null) => {\r\n      if (previouslyExpandedGroupHeader === null) {\r\n        return testState.groups[0].header;\r\n      } else {\r\n        const nextGroupIndex =\r\n          testState.groups.findIndex(g => g.header === previouslyExpandedGroupHeader) + 1;\r\n\r\n        return nextGroupIndex < testState.groups.length\r\n         ? testState.groups[nextGroupIndex].header\r\n         : null;\r\n      }\r\n    })(expandedGroup));\r\n  }\r\n\r\n  function localOnAnswer(question: IQuestion, answer: YesNoAnswer) {\r\n    onAnswer(question, answer);\r\n    if (questionError(question, answer)) {\r\n      history.push(\"result\");\r\n    }\r\n  }\r\n\r\n  function restart() {\r\n    onRestart();\r\n    setExpandedGroup(testState.groups[0].header);\r\n  }\r\n\r\n  function onResult() {\r\n    setScroll((prev) => ({ ...prev, persistedPosition: 0 }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.content}>\r\n        <header className={classes.header}>\r\n          <Typography variant=\"h4\">Test</Typography>\r\n          <ProgressBar\r\n            answeredQuestions={testState.numberOfAnsweredQuestions}\r\n            allQuestions={testState.numberOfAllQuestions}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => restart()}\r\n          >\r\n            <ReplayIcon />\r\n            POWTÓRZ\r\n          </Button>\r\n        </header>\r\n        <Collapse in={showInfo}>\r\n          <Alert\r\n            severity=\"info\"\r\n            icon={<VisibilityOff fontSize=\"inherit\" />}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setShowInfo(false);\r\n                }}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <Typography variant=\"body2\">\r\n              Informacje nie są zbierane ani przekazywane. Tylko Ty je widzisz i\r\n              masz do nich dostęp.\r\n            </Typography>\r\n          </Alert>\r\n        </Collapse>\r\n        <div className={classes.groupsList}>\r\n          {testState.groups.map((group: IQuestionGroup, index: number) => (\r\n            <QuestionGroupComponent\r\n              expanded={expandedGroup === group.header}\r\n              isLastGroup={index === testState.groups.length - 1}\r\n              onToggleGroup={() => toggleGroup(group)}\r\n              onNext={() => openNextGroup()}\r\n              onAnswer={localOnAnswer}\r\n              group={group}\r\n              key={group.header}\r\n            />\r\n          ))}\r\n          <div className={classes.resultButtonContainer}>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={!testState.isDone}\r\n              component={Link}\r\n              to=\"result\"\r\n              onClick={onResult}\r\n            >\r\n              WYNIK\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestComponent;\r\n","import {\r\n  IQuestion,\r\n  IQuestionGroup,\r\n  ITest,\r\n  Result,\r\n  TestResult,\r\n  YesNoAnswer,\r\n} from \"./testDefinition\";\r\n\r\nexport function onAnswer(\r\n  current: ITest,\r\n  question: IQuestion,\r\n  answer: YesNoAnswer\r\n): ITest {\r\n  const subQuestions = getSubquestionsOf(question);\r\n\r\n  const groups: IQuestionGroup[] = current.groups.map((group) => {\r\n    if (containsQuestion(group.questions, question)) {\r\n      const questions: IQuestion[] = [];\r\n      for (let q of group.questions) {\r\n        if (containsQuestion(subQuestions, q)) {\r\n          //in order to remove from questions list all already displayed sub questions of answered questions\r\n          continue;\r\n        }\r\n        if (q.text !== question.text) {\r\n          questions.push(q);\r\n          continue;\r\n        }\r\n\r\n        switch (answer) {\r\n          case \"Yes\":\r\n            if (q.onYes === \"AnotherQuestion\") {\r\n              questions.push({\r\n                ...q,\r\n                answer,\r\n                result: \"Empty\",\r\n              });\r\n\r\n              questions.push({\r\n                ...q.onYesQuestion!,\r\n              });\r\n            } else {\r\n              questions.push({\r\n                ...q,\r\n                answer,\r\n                result: q.onYes,\r\n              });\r\n            }\r\n            break;\r\n          case \"No\":\r\n            if (q.onNo === \"AnotherQuestion\") {\r\n              questions.push({\r\n                ...q,\r\n                answer,\r\n                result: \"Empty\",\r\n              });\r\n\r\n              questions.push({\r\n                ...q.onNoQuestion!,\r\n              });\r\n            } else {\r\n              questions.push({\r\n                ...q,\r\n                answer,\r\n                result: q.onNo,\r\n              });\r\n            }\r\n            break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...group,\r\n        questions,\r\n        result: questions.some((q) => q.answer === null)\r\n          ? null\r\n          : calculateResult(questions),\r\n      };\r\n    }\r\n    return group;\r\n  });\r\n\r\n  const allQuestions = groups.flatMap((g) => g.questions);\r\n  const answeredQuestions = allQuestions.filter((q) => q.answer !== null);\r\n\r\n  const [testResult, testResultAdditionalMessages] = calculateTestResult(\r\n    answeredQuestions\r\n  );\r\n\r\n  return {\r\n    groups,\r\n    numberOfAllQuestions: allQuestions.length,\r\n    numberOfAnsweredQuestions: answeredQuestions.length,\r\n    isDone:\r\n      current.numberOfAllQuestions === answeredQuestions.length ||\r\n      testResult === \"Error\",\r\n    testResult,\r\n    testResultAdditionalMessages,\r\n  };\r\n\r\n  function containsQuestion(questions: IQuestion[], question: IQuestion) {\r\n    return questions.some((q) => q.text === question.text);\r\n  }\r\n\r\n  function getSubquestionsOf(question: IQuestion): IQuestion[] {\r\n    const result = [];\r\n    if (question.onYesQuestion) {\r\n      result.push(question.onYesQuestion);\r\n      result.push(...getSubquestionsOf(question.onYesQuestion));\r\n    }\r\n\r\n    if (question.onNoQuestion) {\r\n      result.push(question.onNoQuestion);\r\n      result.push(...getSubquestionsOf(question.onNoQuestion));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function calculateTestResult(\r\n    answeredQuestions: IQuestion[]\r\n  ): [TestResult, string[]] {\r\n    const testResult = calculateResult(answeredQuestions);\r\n\r\n    const additionalResultMessages =\r\n      testResult === \"Success\"\r\n        ? []\r\n        : answeredQuestions\r\n            .filter((q) => q.result === testResult && q.additionalResultMessage)\r\n            .map((q) => q.additionalResultMessage!);\r\n\r\n    return [testResult, additionalResultMessages];\r\n  }\r\n\r\n  function calculateResult(questions: IQuestion[]): Result {\r\n    return questions.some((q) => q.result === \"Error\")\r\n      ? \"Error\"\r\n      : questions.some((q) => q.result === \"Warning\")\r\n      ? \"Warning\"\r\n      : \"Success\";\r\n  }\r\n}\r\n\r\nexport function questionError(question: IQuestion, answer: YesNoAnswer) {\r\n  return (\r\n    (answer === \"Yes\" && question.onYes === \"Error\") ||\r\n    (answer === \"No\" && question.onNo === \"Error\")\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport * as React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport logo from \"../../logoRCKiK.png\";\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginTop: \"16px\",\r\n        marginBottom: \"8px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n      },\r\n    content: {\r\n        padding: \"0 16px\",\r\n        flex: 1\r\n    },\r\n    logoSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: \"10px 0\",\r\n        \"& img\": {\r\n            marginRight: 10\r\n        }\r\n    },\r\n    logoImg: {\r\n        width: \"100%\"\r\n    },\r\n    testStartSection: {\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nexport function LandingPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Typography variant=\"h4\">Ozdrowieńcu!</Typography>\r\n                </header>\r\n                <section>                    \r\n                    <Typography variant=\"body2\">\r\n                        Chorowałeś na COVID-19 i jesteś już zdrowy? Wspaniale! Teraz możesz uratować komuś życie!\r\n                    </Typography>               \r\n                    <Typography component=\"article\" variant=\"body2\" style={{ marginBottom: \"10px\" }}>\r\n                        Wiemy jak trudno jest uzyskać konkretną informację na temat możliwości oddania osocza przez ozdrowieńców. Żeby odciążyć centra krwiodawstwa\r\n                        na etapie wstępnych wywiadów, stworzyliśmy projekt osocze.info. W ciągu kilku minut dowiesz się czy Twoje osocze może pomóc leczyć chorych na koronawirusa.\r\n                    </Typography>\r\n                    <Typography component=\"article\" variant=\"body2\">\r\n                        Pytania w ankiecie odpowiadają tym, które zadałaby Ci przez telefon osoba z punktu krwiodawstwa. Odpowiedzi nie są zbierane na tym etapie\r\n                        i są całkowicie anonimowe. To narzędzie ma służyć wyłacznie sprawdzeniu czy nie ma przeciwskazań, abyś został dawcą osocza.\r\n                    </Typography>\r\n                </section>\r\n                <section className={classes.testStartSection}>\r\n                    <Button component={Link} to=\"test\" size=\"large\" variant=\"contained\" color=\"primary\">Rozpocznij test</Button>\r\n                </section>\r\n                <section className={classes.logoSection}>\r\n                    <a href=\"https://rckik.krakow.pl\" target=\"blank\">\r\n                        <img src={logo} className={classes.logoImg} alt=\"RCKiK w Krakowie logo\" />\r\n                    </a>\r\n                    <Typography variant=\"body2\">\r\n                        Ankieta pod patronatem <strong>RCKiK</strong>. Dane są w pełni anonimowe, widzisz je tylko Ty na Swoim ekranie, nikt ich nie zbiera i nie przetwarza\r\n                    </Typography>                                        \r\n                </section>              \r\n            </div>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/medius.39094742.jpg\";","import * as React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from \"@material-ui/core\";\r\nimport logo from \"../../medius.jpg\";\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginTop: \"16px\",\r\n        marginBottom: \"8px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n      },\r\n    content: {\r\n        padding: \"0 16px\",\r\n        flex: 1\r\n    },\r\n    logoSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: \"5px 0\",\r\n        \"& img\": {\r\n            marginRight: 10\r\n        }\r\n    },\r\n    logoImg: {\r\n        width: \"60%\"\r\n    },\r\n    testStartSection: {\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport function CreatorsPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.content}>\r\n                <header className={classes.header}>\r\n                    <Typography variant=\"h4\">Kim jesteśmy?</Typography>\r\n                </header>\r\n                <section>\r\n                    <Typography component=\"article\" variant=\"body2\" style={{ marginBottom: \"10px\" }}>\r\n                    Jesteśmy grupą znajomych, których łączą co najmniej dwie rzeczy:\r\n                    <br /> - chęć niesienia pomocy,\r\n                    <br /> - wspólna praca i pasja jaką jest tworzenie oprogramowania,\r\n                    <br /> - miłość do kawy w dobrym toważsytwie.\r\n                    </Typography>\r\n                    <Typography component=\"article\" variant=\"body2\" style={{ marginBottom: \"10px\" }}>\r\n                    Postanowiliśmy dobrze wykorzystać to w czym jesteśmy najlepsi.\r\n                    Zebraliśmy wymagania, zaprojektowaliśmy i wykonaliśmy aplikację, przetestowaliśmy jej działanie oraz zweryfikowaliśmy poprawność pod czujnym okiem specjalistów z <strong>RCKiK</strong> w Krakowie.\r\n                    Wykorzystaliśmy swój wolny czas, aby nie tracili go Ci którzy potrafią i mogą ratować ludzkie życie.\r\n                    </Typography>\r\n                </section>\r\n                <section>\r\n                    <Typography variant=\"body2\" style={{ marginBottom: \"30px\" }}>\r\n                    Mamy nadzieję, że podobają Ci się efekty naszej pracy. Jeśli jesteś ciekaw czym zajmujemy się na codzień, zapraszamy na naszą stronę internetową:\r\n                    </Typography>\r\n                </section>\r\n                <section className={classes.testStartSection}>\r\n                    <a href=\"https://www.mediusflow.com/en/about/career/career-welcome\" target=\"blank\">\r\n                        <img src={logo} className={classes.logoImg} alt=\"Medius logo\" />\r\n                    </a>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}","export type YesNoAnswer = \"Yes\" | \"No\";\r\nexport type QuestionType = \"YesNo\" | \"Date\";\r\nexport type Result = \"Success\" | \"Error\" | \"Warning\" | \"Empty\";\r\nexport type TestResult = Result;\r\nexport type GroupResult = Result;\r\nexport type QuestionResult = Result | \"AnotherQuestion\";\r\n\r\nexport interface IQuestion {\r\n  readonly type: QuestionType;\r\n  readonly text: string;\r\n  readonly onYes: QuestionResult;\r\n  readonly onNo: QuestionResult;\r\n  readonly additionalResultMessage?: string;\r\n  readonly info?: string;\r\n  readonly onYesQuestion?: IQuestion;\r\n  readonly onNoQuestion?: IQuestion;\r\n  answer: YesNoAnswer | null;\r\n  result: QuestionResult | null;\r\n}\r\nexport interface IQuestionGroup {\r\n  readonly header: string;\r\n  readonly questions: IQuestion[];\r\n  result: GroupResult | null;\r\n}\r\n\r\nexport interface ITest {\r\n  readonly groups: IQuestionGroup[];\r\n  isDone: boolean;\r\n  numberOfAnsweredQuestions: number;\r\n  numberOfAllQuestions: number;\r\n  testResult: TestResult | null;\r\n  testResultAdditionalMessages: string[];\r\n}\r\n\r\nexport function createTestState(): ITest {\r\n  const groups: IQuestionGroup[] = [\r\n    {\r\n      header: \"Ogólny stan zdrowia\",\r\n      result: null,\r\n      questions: [\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy masz więcej niż 65 lat?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy masz mniej niż 18 lat?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy ważysz mniej niż 50 kilogramów?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text:\r\n            \"Czy chorujsz na choroby układu krążenia, dolegliwości ze strony serca: zawał serca, duszności lub udar mózgu?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text:\r\n            \"Czy chorujesz na choroby skóry, wypryski/wysypkę, uczulenia, katar sienny lub astmę?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text:\r\n            \"Czy chorujesz na cukrzycę, choroby krwi, przedłużone krwawienie, choroby nerek, choroby nerwowe, padaczkę, nowotwór, choroby przewodu pokarmowego, choroby tarczycy lub zapalenie szpiku?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text:\r\n            \"Czy chorujesz lub chorowałeś na kiłę, rzeżączkę, toksoplazmozę, brucelozę, gruźlicę lub mononukleozę zakaźną?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy zażywasz regularnie jakiekolwiek leki?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text:\r\n            \"Czy w ciągu ostatnich 12 miesięcy byłeś za granicą? Szczególnie w krajach egzotycznych np. Zanzibar lub Tajlandia?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy kiedykolwiek miałeś transfuzję krwi?\",\r\n          onYes: \"Warning\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n          info: \"Jeśli tak, konieczne będą dodatkowe badania p/c anty HLA\",\r\n          additionalResultMessage:\"Z powodu transfuzji, konieczne będą dodatkowe badania p/c anty HLA.\"\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy kiedykolwiek byłaś w ciąży? (Wybierz NIE jeśli pytanie Cię nie dotyczy)\",\r\n          onYes: \"Warning\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n          info: \"Jeśli tak, konieczne będą dodatkowe badania p/c anty HLA\",\r\n          additionalResultMessage:\"Z powodu przebytej ciąży, konieczne będą dodatkowe badania p/c anty HLA.\"\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      header: \"Czasowe wykluczenia\",\r\n      result: null,\r\n      questions: [\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy w ciągu ostatnich 6 miesięcy miałeś jakikolwiek zabieg operacyjny, gastroskopię, kolonoskopię, biopsję, tatuaż, piercing lub mały zabieg u stomatologa? \",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy w ciągu ostatnich 6 miesięcy prowadziłeś diagnostykę z powodu choroby, tomografię komputerową lub rezonans magnetyczny? \",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy w ciągu ostatnich 6 miesięcy zmieniałeś partnera seksualnego?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy w ciągu ostatnich 6 miesięcy wykonywałeś zabiegi kosmetyczne z przebijaniem naskórka, makijaż permanentny, manicure lub pedicure?\",\r\n          onYes: \"Error\",\r\n          onNo: \"Success\",\r\n          answer: null,\r\n          result: null,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      header: \"Kontakt z COVID-19\",\r\n      result: null,\r\n      questions: [\r\n        {\r\n          type: \"YesNo\",\r\n          text: \"Czy masz potwierdzone zakażenie COVID-19 wymazem?\",\r\n          onYes: \"AnotherQuestion\",\r\n          onYesQuestion: {\r\n            type: \"YesNo\",\r\n            text: \"Czy minęło 28 dni od ustopienia u Ciebie objawów COVID-19 lub 18 dni od zakończenia izolacji?\",\r\n            onYes: \"Success\",\r\n            onNo: \"Error\",\r\n            answer: null,\r\n            result: null,\r\n            additionalResultMessage: \"Uprzejmie prosimy o ponowne wykonanie testu po 28 dniach od ustopienia objawów lub 18 dni od zakończenia izolacji.\",\r\n          },\r\n          onNo: \"AnotherQuestion\",\r\n          onNoQuestion: {\r\n            type: \"YesNo\",\r\n            text: \"Czy masz wykonane badanie na przeciwciała przeciwko wirusowi SARS-CoV-2?\",\r\n            onYes: \"AnotherQuestion\",\r\n            onYesQuestion: {\r\n              type: \"YesNo\",\r\n              text: \"Czy wynik testu na przeciwciała był dodatni?\",\r\n              onYes: \"AnotherQuestion\",\r\n              onYesQuestion: {\r\n                type: \"YesNo\",\r\n                text: \"Czy wystąpiły u Ciebie objawy typowe dla COVID-19 np. gorączka, kaszel, utrata węchu i smaku, ból pleców, biegunka?\",\r\n                onYes: \"AnotherQuestion\",\r\n                onYesQuestion: {\r\n                  type: \"YesNo\",\r\n                  text: \"Czy minęło 28 dni od ustąpienia u Ciebie objawów COVID-19?\",\r\n                  onYes: \"Success\",\r\n                  onNo: \"Warning\",\r\n                  answer: null,\r\n                  result: null,\r\n                  additionalResultMessage: \"Uprzejmie prosimy o ponowne wykonanie testu po 28 dniach od ustąpienia u Ciebie objawów COVID-19.\",\r\n                },\r\n                onNo: \"AnotherQuestion\",\r\n                onNoQuestion: {\r\n                  type: \"YesNo\",\r\n                  text: \"Czy minęło 14 dni od uzyskania dodatniego wyniku testu na przeciwciała?\",\r\n                  onYes: \"Success\",\r\n                  onNo: \"Error\",\r\n                  answer: null,\r\n                  result: null,\r\n                  additionalResultMessage: \"Uprzejmie prosimy o ponowne wykonanie testu po 14 dniach od uzyskaina dodatniego wyniku testu na przeciwciała.\",\r\n                },\r\n                answer: null,\r\n                result: null,\r\n              },\r\n              onNo: \"Error\",\r\n              answer: null,\r\n              result: null,\r\n            },\r\n            onNo: \"AnotherQuestion\",\r\n            onNoQuestion: {\r\n              type: \"YesNo\",\r\n              text: \"Czy wystąpiły u Ciebie objawy typowe dla COVID-19 np. gorączka, kaszel, utrata węchu i smaku, ból głowy?\",\r\n              onYes: \"AnotherQuestion\",\r\n              onYesQuestion: {\r\n                type: \"YesNo\",\r\n                text: \"Czy miałeś kontakt z osobą z potwierdzonym zakażaniem COVID-19?\",\r\n                onYes: \"AnotherQuestion\",\r\n                onYesQuestion: {\r\n                  type: \"YesNo\",\r\n                  text: \"Czy minęło 28 dni od ustąpienia u Ciebie objawów COVID-19?\",\r\n                  onYes: \"Success\",\r\n                  onNo: \"Error\",\r\n                  answer: null,\r\n                  result: null,\r\n                  additionalResultMessage: \"Uprzejmie prosimy o ponowne wykonanie testu po 28 dniach od ustąpienia u Ciebie objawów COVID-19.\",\r\n                },\r\n                onNo: \"Error\",\r\n                answer: null,\r\n                result: null,\r\n              },\r\n              onNo: \"Error\",\r\n              answer: null,\r\n              result: null,\r\n            },\r\n            answer: null,\r\n            result: null,\r\n          },\r\n          answer: null,\r\n          result: null,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return {\r\n    isDone: false,\r\n    groups: groups,\r\n    numberOfAllQuestions: groups.flatMap((g) => g.questions).length,\r\n    numberOfAnsweredQuestions: 0,\r\n    testResult: null,\r\n    testResultAdditionalMessages: [],\r\n  };\r\n}\r\n\r\nexport const testState = createTestState();\r\n","import {\r\n  createTestState,\r\n  IQuestion,\r\n  ITest,\r\n  YesNoAnswer,\r\n} from \"./questions/testDefinition\";\r\nimport { onAnswer } from \"./questions/testLogic\";\r\n\r\nexport const initialState = createTestState();\r\n\r\nconst ANSWER_QUESTION_TYPE = \"ANSWER_QUESTION\";\r\nconst RESET_STATE_TYPE = \"RESET_STATE\";\r\n\r\ntype AnswerQuestionAction = {\r\n  type: typeof ANSWER_QUESTION_TYPE;\r\n  payload: {\r\n    question: IQuestion;\r\n    answer: YesNoAnswer;\r\n  };\r\n};\r\n\r\ntype ResetAction = {\r\n  type: typeof RESET_STATE_TYPE;\r\n};\r\n\r\nexport function answerQuestionAction(\r\n  question: IQuestion,\r\n  answer: YesNoAnswer\r\n): AnswerQuestionAction {\r\n  return {\r\n    type: ANSWER_QUESTION_TYPE,\r\n    payload: {\r\n      question,\r\n      answer,\r\n    },\r\n  };\r\n}\r\n\r\nexport function resetStateAction(): ResetAction {\r\n  return {\r\n    type: RESET_STATE_TYPE,\r\n  };\r\n}\r\n\r\nexport function appStateReducer(\r\n  state: ITest,\r\n  action: AnswerQuestionAction | ResetAction\r\n): ITest {\r\n  switch (action.type) {\r\n    case ANSWER_QUESTION_TYPE:\r\n      return onAnswer(state, action.payload.question, action.payload.answer);\r\n    case RESET_STATE_TYPE:\r\n      return createTestState();\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport AppBar from \"./components/AppBar\";\r\nimport Result from \"./components/Result/Result\";\r\nimport FAQComponent from \"./components/FAQ\";\r\nimport BottomNavigation from \"./components/BottomNavigation\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport TestComponent from \"./components/Test\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { LandingPage } from \"./components/Landing/Page\";\r\nimport { CreatorsPage } from \"./components/Creators/CreatorsPage\";\r\n\r\nimport {appStateReducer, initialState, resetStateAction, answerQuestionAction } from \"./appState\";\r\nimport { AppContextProvider, ScrollInfo } from \"./appContext\";\r\nimport { IQuestion, YesNoAnswer } from \"./questions/testDefinition\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    app: {\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      flex: 1,\r\n    },\r\n    container: {\r\n      padding: 0,\r\n    },\r\n    test: {\r\n      overflowY: \"scroll\"\r\n    }\r\n  })\r\n);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#393070\",\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    secondary: {\r\n      main: \"#AEA9BA\",\r\n    },\r\n    error: {\r\n      main: \"#F88065\",\r\n    },\r\n    warning: {\r\n      main: \"#FFBA5A\",\r\n    },\r\n    info: {\r\n      main: \"#595685\",\r\n    },\r\n    success: {\r\n      main: \"#5D9F65\",\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Roboto\", \"Noto Serif\", \"serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const initialScrollState: ScrollInfo = { appliedPosition: 0, persistedPosition: 0 };\r\n\r\n  const [testState, dispatch] = React.useReducer(appStateReducer, initialState);\r\n  const [showInfo, setShowInfo] = React.useState(true);\r\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\r\n  const [expandedGroupHeader, setExpandedGroupHeader] = React.useState<string | null>(testState.groups[0].header);\r\n\r\n  const appContainerElement = useRef(null);\r\n\r\n  const appContext = { showInfo, setShowInfo, scroll: scrollState, setScroll: setScrollState};\r\n  const testProps = { testState, onAnswer, onRestart, expandedGroup: expandedGroupHeader, setExpandedGroup: setExpandedGroupHeader };\r\n  const resultProps = {result: testState.testResult!, resultAdditionalMessages: testState.testResultAdditionalMessages, backToTestCallback: onBackToTest};\r\n\r\n  function onRestart() {\r\n    dispatch(resetStateAction());\r\n  }\r\n\r\n  function onBackToTest() {\r\n    setScrollState(prev => ({...prev, appliedPosition: prev.persistedPosition}))\r\n  }\r\n\r\n  function onAnswer(question: IQuestion, answer: YesNoAnswer) {\r\n      const scrollPosition: number = (appContainerElement as any).current?.scrollTop ?? 0;\r\n      setScrollState(prev => ({...prev, persistedPosition: scrollPosition}))\r\n      dispatch(answerQuestionAction(question, answer));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if ((appContainerElement as any)?.current !== null) {\r\n      (appContainerElement as any).current.scrollTop = scrollState.appliedPosition;\r\n    }\r\n  }, [scrollState.appliedPosition]);\r\n\r\n  return (\r\n    <div ref={appContainerElement} className={classes.test}>\r\n    <Router>\r\n      <Container maxWidth=\"sm\" className={classes.container}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className={classes.app}>\r\n            <AppBar showResultOption={!!testState.isDone} />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <LandingPage />\r\n              </Route>\r\n              <Route path=\"/test\">\r\n                <div className={classes.content}>\r\n                  <AppContextProvider value={appContext}>\r\n                    <TestComponent {...testProps} />\r\n                  </AppContextProvider>\r\n                </div>\r\n              </Route>\r\n              {testState.isDone && (\r\n                <Route path=\"/result\">\r\n                  <div className={classes.content}>\r\n                    <Result {...resultProps} />\r\n                  </div>\r\n                </Route>\r\n              )}\r\n              <Route path=\"/faq\">\r\n                <FAQComponent />\r\n              </Route>\r\n              <Route path=\"/tworcy\">\r\n                <CreatorsPage />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <LandingPage />\r\n              </Route>\r\n            </Switch>\r\n            <BottomNavigation />\r\n          </div>\r\n        </ThemeProvider>\r\n      </Container>\r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}