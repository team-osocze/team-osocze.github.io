{"version":3,"sources":["components/AppBar.tsx","components/BottomNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","menuButton","marginRight","spacing","title","flexGrow","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","SimpleBottomNavigation","React","useState","value","setValue","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","app","textAlign","height","display","flexDirection","content","flex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRASMA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,GAENC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHC,SAAU,QAKP,SAASC,IACpB,IAAMC,EAAUX,IAEhB,OACI,qBAAKY,UAAWD,EAAQP,KAAxB,SACI,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWD,EAAQN,WAAYa,MAAM,UAAUC,aAAW,OAAnF,SACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWD,EAAQH,QAC5C,cAACQ,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAApD,SACI,cAAC,IAAD,a,+EC1BlBnB,EAAYC,YAAW,CAC3BG,KAAM,KAIO,SAASkB,IACtB,IAAMX,EAAUX,IAD+B,EAErBuB,IAAMC,SAAS,GAFM,mBAExCC,EAFwC,KAEjCC,EAFiC,KAI/C,OACE,eAAC,IAAD,CACED,MAAOA,EACPE,SAAU,SAACC,EAAOC,GAChBH,EAASG,IAEXC,YAAU,EACVlB,UAAWD,EAAQP,KANrB,UAQE,cAAC2B,EAAA,EAAD,CAAwBC,MAAM,UAAUC,KAAM,cAAC,IAAD,MAC9C,cAACF,EAAA,EAAD,CAAwBC,MAAM,YAAYC,KAAM,cAAC,IAAD,MAChD,cAACF,EAAA,EAAD,CAAwBC,MAAM,SAASC,KAAM,cAAC,IAAD,SCvBnD,IAAMjC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT+B,IAAK,CACHC,UAAW,SACXC,OAAQ,QACRC,QAAS,OACTC,cAAe,UAEjBC,QAAS,CACPC,KAAM,QAkBDC,MAbf,WACE,IAAM9B,EAAUX,IAChB,OACE,sBAAKY,UAAWD,EAAQuB,IAAxB,UACE,cAAC,EAAD,IACA,qBAAKtB,UAAWD,EAAQ4B,QAAxB,0BAGA,cAAC,EAAD,QCbSG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6e88df45.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}></Typography>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialBottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <MaterialBottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n    </MaterialBottomNavigation>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from \"./components/AppBar\";\r\nimport BottomNavigation from \"./components/BottomNavigation\";\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        app: {\r\n          textAlign: \"center\",\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        },\r\n        content: {\r\n          flex: 1\r\n        }\r\n    }),\r\n);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.app}>\r\n      <AppBar />\r\n      <div className={classes.content}>\r\n        Content here\r\n      </div>\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}